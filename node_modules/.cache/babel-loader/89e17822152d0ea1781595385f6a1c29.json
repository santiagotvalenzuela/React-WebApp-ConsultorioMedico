{"ast":null,"code":"var jwt = require('jsonwebtoken');\n\nvar authorization = function (req, res, next) {\n  var token = localStorage.getItem(\"token\");\n  console.log(\"token\", token);\n  var msg = {\n    auth: false,\n    message: 'No token provided.'\n  };\n  if (!token) res.status(500).send(msg);\n  let sec = process.env.SECRET; //console.log(\"secret\",sec)\n\n  jwt.verify(token, sec, function (err, decoded) {\n    var msg = {\n      auth: false,\n      message: 'Failed to authenticate token.'\n    };\n    if (err) res.status(500).send(msg);\n    req.userId = decoded.id;\n    req.rol = decoded.role;\n    next();\n  });\n};\n\nmodule.exports = authorization;","map":{"version":3,"sources":["C:/Users/admsch/Desktop/API/ProyectoAPI2/src/auth.js"],"names":["jwt","require","authorization","req","res","next","token","localStorage","getItem","console","log","msg","auth","message","status","send","sec","process","env","SECRET","verify","err","decoded","userId","id","rol","role","module","exports"],"mappings":"AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAjB;;AAEA,IAAIC,aAAa,GAAG,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAE1C,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBJ,KAApB;AACA,MAAIK,GAAG,GAAG;AAACC,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAV;AACA,MAAI,CAACP,KAAL,EACIF,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,GAArB;AAEJ,MAAIK,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,MAAtB,CAR0C,CAS1C;;AACAnB,EAAAA,GAAG,CAACoB,MAAJ,CAAWd,KAAX,EAAkBU,GAAlB,EAAuB,UAAUK,GAAV,EAAeC,OAAf,EAAwB;AAC3C,QAAIX,GAAG,GAAG;AAACC,MAAAA,IAAI,EAAE,KAAP;AAAcC,MAAAA,OAAO,EAAE;AAAvB,KAAV;AACA,QAAIQ,GAAJ,EACAjB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,GAArB;AACAR,IAAAA,GAAG,CAACoB,MAAJ,GAAaD,OAAO,CAACE,EAArB;AACArB,IAAAA,GAAG,CAACsB,GAAJ,GAAUH,OAAO,CAACI,IAAlB;AACArB,IAAAA,IAAI;AACP,GAPD;AAQH,CAlBD;;AAoBAsB,MAAM,CAACC,OAAP,GAAiB1B,aAAjB","sourcesContent":["var jwt = require('jsonwebtoken');\r\n\r\nvar authorization = function (req, res, next) {\r\n\r\n    var token = localStorage.getItem(\"token\");\r\n    console.log(\"token\",token);\r\n    var msg = {auth: false, message: 'No token provided.'};\r\n    if (!token)\r\n        res.status(500).send(msg);\r\n\r\n    let sec = process.env.SECRET;\r\n    //console.log(\"secret\",sec)\r\n    jwt.verify(token, sec, function (err, decoded) {\r\n        var msg = {auth: false, message: 'Failed to authenticate token.'};\r\n        if (err)\r\n        res.status(500).send(msg);\r\n        req.userId = decoded.id;\r\n        req.rol = decoded.role;\r\n        next();\r\n    });\r\n}\r\n\r\nmodule.exports = authorization;"]},"metadata":{},"sourceType":"module"}